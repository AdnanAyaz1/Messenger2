// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId 
  email     String   @unique
  password  String?
  username String   @unique
  image     String?
  provider String
  providerAccountId String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  conservationIds String[] @db.ObjectId
  converstarions Conversation[] @relation(fields: [conservationIds],references: [id])  

  seenMessagesIds String[] @db.ObjectId
  seenMessages Message[] @relation("Seen",fields: [seenMessagesIds],references: [id])

  messages Message[]

}

model Conversation {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  lastMessage DateTime @default(now()) 
  name String
  isGroup Boolean

  MessagesIds String[] @db.ObjectId
  messages Message[]

  userIds String[] @db.ObjectId
  users User[] @relation(fields: [userIds],references: [id])
 
}

model Message{
    id        String   @id @default(auto()) @map("_id") @db.ObjectId
    body String?
    image String?
    createdAt DateTime @default(now())
 
    seenIds String[] @db.ObjectId
    seenBy User[] @relation("Seen",fields: [seenIds],references: [id])

    conversationId String @db.ObjectId
    conversation Conversation @relation(fields: [conversationId],references: [id])

    senderId String @db.ObjectId
    sender User @relation(fields: [senderId],references: [id])

}